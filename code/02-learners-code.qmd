---
title: "Training session code: Significance testing"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

### Packages you need

```{r setup}
#| include: false
# R packages
library(here)
library(tidyverse)
library(googlesheets4)
library(janitor)
library(patchwork)
```

### Set up data

```{r}
# Create a sequence of x values (chi-square values)
x <- seq(0, 120, length.out = 500)

# Choose degrees of freedom to illustrate
dfs <- seq(1:12)

# Create data frame of densities for each df
chi_data <- expand.grid(x = x, df = dfs) |> 
  mutate(density = dchisq(x, df))

# Load valid data
gta_valid <-read_rds(here("data/data-valid/data-valid-training.rds"))
```

### Is what we observed extreme enough to cause a fuss?

```{r}
chi_pdf_by_k_test_statistic_region <- function(
  k, 
  x_val = NULL, 
  y_max = 0.5, 
  stitle = "Shaded area = P(X^2 ≥ x)", 
  p_value = NULL, 
  alpha = NULL, 
  show_title = TRUE
) {
  
  # Filter for one df
  data_df <- chi_data |> filter(df == k)
  
  # Title logic
  main_title <- if (show_title) {
    bquote("Chi-square probability density function for df = " ~ .(k))
  } else {
    NULL
  }
  
  # Base plot
  p <- ggplot(data_df, aes(x = x, y = density)) +
    geom_line(colour = "steelblue", linewidth = 1.2) +
    coord_cartesian(ylim = c(0, y_max)) +
    labs(
      title = main_title,
      x = expression(chi^2~"value"),
      y = "Density"
    ) +
    theme_bw(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold")
    )
  
  # 1️⃣ Add shaded region for observed test statistic
  if (!is.null(x_val)) {
    shade_data <- data.frame(x = seq(x_val, max(data_df$x), length.out = 200))
    shade_data$y <- dchisq(shade_data$x, k)
    
    p <- p +
      geom_area(data = shade_data, aes(x = x, y = y),
                fill = "tomato", alpha = 0.5) +
      geom_vline(xintercept = x_val, linetype = "dashed", colour = "grey40") +
      annotate("text", x = x_val, y = y_max * 0.9, 
               label = paste0("Chi-squared test statistic = ", round(x_val,2)), 
               hjust = -0.1, colour = "grey40") +
      labs(subtitle = stitle)
    
    # Optional p-value label
    if (!is.null(p_value)) {
      p <- p +
        annotate("text", 
                 x = x_val, 
                 y = y_max * 0.8, 
                 label = paste0("p-value = ", signif(p_value, 3)),
                 hjust = -0.1,
                 colour = "tomato",
                 fontface = "italic")
    }
  }
  
  # 2️⃣ Add shaded critical region for alpha (significance level)
  if (!is.null(alpha)) {
    crit_val <- qchisq(1 - alpha, df = k)
    
    crit_data <- data.frame(x = seq(crit_val, max(data_df$x), length.out = 200))
    crit_data$y <- dchisq(crit_data$x, k)
    
    p <- p +
      geom_area(data = crit_data, aes(x = x, y = y),
                fill = "purple", alpha = 0.3) +
      geom_vline(xintercept = crit_val, colour = "purple", linetype = "dotted") +
      annotate("text", 
               x = crit_val, 
               y = y_max * 0.7, 
               label = paste0("Critical value (α = ", alpha, ") = ", round(crit_val, 2)),
               hjust = -0.1, colour = "purple", fontface = "italic")
  }
  
  print(p)
}

chi_pdf_by_k_test_statistic_region(
  k = 8,
  alpha = 0.05,
  y_max = 0.15,
  stitle = "Red area = observed p-value, purple = rejection region",
  show_title = FALSE
) +
  coord_cartesian(c(0,30))

ggsave(here("outputs/figures/gta_pdf_k8_critical_region.pdf"), width = 6, height = 5, device = cairo_pdf)
```

### Accept null

```{r}
chi_pdf_by_k_test_statistic_region(
  k = 8,
  x_val = 8.6,
  alpha = 0.05,
  y_max = 0.15,
  p_value = pchisq(8.6, df = 8, lower.tail = FALSE),
  stitle = "Red area = observed p-value, purple = rejection region",
  show_title = FALSE
) +
  coord_cartesian(c(0,30))

ggsave(here("outputs/figures/gta_pdf_k8_accept_null.pdf"), width = 6, height = 5, device = cairo_pdf)
```

### Reject null

```{r}
chi_pdf_by_k_test_statistic_region(
  k = 8,
  x_val = 20,
  alpha = 0.05,
  y_max = 0.15,
  p_value = pchisq(20, df = 8, lower.tail = FALSE),
  stitle = "Red area = observed p-value, purple = rejection region",
  show_title = FALSE
) +
  coord_cartesian(c(0,30))

ggsave(here("outputs/figures/gta_pdf_k8_reject_null.pdf"), width = 8, height = 5, device = cairo_pdf)
```

### Exercise 

```{r}
# URL
anu_wg <- read_sheet("https://docs.google.com/spreadsheets/d/1th1g7rIm8CnAasC4ZW63fgBe2uYE0Q7uDpPZyC67IP0/edit?gid=0#gid=0",
           range = "B1:E9", sheet = "Enter counts here!") |> 
  clean_names() |>
  mutate(location = "ANU Wagga Wagga")

uoa <- read_sheet("https://docs.google.com/spreadsheets/d/1th1g7rIm8CnAasC4ZW63fgBe2uYE0Q7uDpPZyC67IP0/edit?gid=0#gid=0",
           range = "B13:E21", sheet = "Enter counts here!") |> 
  clean_names() |> 
  mutate(location = "Uni of Adelaide")

anu_cbr <- read_sheet("https://docs.google.com/spreadsheets/d/1th1g7rIm8CnAasC4ZW63fgBe2uYE0Q7uDpPZyC67IP0/edit?gid=0#gid=0",
           range = "B25:E33", sheet = "Enter counts here!") |> 
  clean_names() |>
  mutate(location = "ANU Canberra")

# Combine together
workshop_data <- bind_rows(anu_wg,uoa, anu_cbr) |> 
  relocate(location, .before = brand_of_chocolate) |> 
  mutate(location = fct_relevel(location, "ANU Wagga Wagga", "Uni of Adelaide", "ANU Canberra"))
```


```{r}
overall_data <- workshop_data |> 
  summarise(
    chi_sq_statistic = sum(discrepancy) |> round(2),
    p_value = pchisq(chi_sq_statistic, df = 8, lower.tail = FALSE)
    ) 

  
chi_pdf_by_k_test_statistic_region(k = 8,
                                   y_max = 0.12,
                                   alpha = 0.05,
                                   x_val = overall_data$chi_sq_statistic,
                                   p_value = overall_data$p_value,
                                   show_title = FALSE,
                                   stitle = "Overall data for entire training session"
                                   ) + 
  coord_cartesian(c(0,30))

ggsave(here("outputs/figures/gta_favourites_combined.pdf"), width = 8, height = 5, device = cairo_pdf)
```


```{r}
grouped_data <- workshop_data |> 
  group_by(location) |> 
  summarise(chi_sq_statistic = sum(discrepancy) |> round(2),
            p_value = pchisq(chi_sq_statistic, df = 8, lower.tail = FALSE)
    ) 
  
pmap(
  .l = grouped_data, 
  .f = function(location, chi_sq_statistic, p_value){
    chi_pdf_by_k_test_statistic_region(k = 8, 
                                       x_val = chi_sq_statistic, 
                                       alpha = 0.05,
                                       y_max = 0.12, 
                                       stitle = location,
                                       p_value = p_value,
                                       show_title = FALSE)
  } ) |>  
  wrap_plots()


ggsave(here("outputs/figures/gta_favourites_seperate.pdf"), width = 18, height = 5, device = cairo_pdf)
```

### GTA Expected and Observed

### Difference in expectation and observed

```{r}
gta_valid |> 
  filter(str_detect(sample_code, "Mix"), 
         !expected_seeds == 0) |> 
  select(workstation, sample_code, obs_id, variety, ends_with("seeds")) |> 
  mutate(difference_seeds = expected_seeds - predicted_seeds) |> 
  filter(sample_code == "GTAMix1",
  ) |> 
  ggplot(aes(classified_seeds, difference_seeds)) + 
  geom_hline(yintercept = 0, linetype = 2) +
ggtitle("GTAMix1") +
  ylab("Observed seeds - Expected seeds") +
  geom_point(aes(colour = variety), size = 2) +
  # coord_flip() +
  theme_bw() +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(angle = 45, hjust = 1)
  )
```

```{r}
  gta_valid |> 
  filter(
    str_detect(sample_code, "Mix"), 
    !expected_seeds == 0,
    sample_code == "GTAMix1"
         ) |> 
  select(workstation, sample_code, obs_id, variety, ends_with("seeds")) |> 
  mutate(difference_seeds = expected_seeds - predicted_seeds) |> 
  ggplot(aes(classified_seeds, difference_seeds)) + 
  geom_hline(yintercept = 0, linetype = 2) +
  ylab("Observed seeds - Expected seeds") +
  xlab("Classified seeds") +
  geom_point(aes(colour = variety), size = 5) +
  scale_colour_manual(values = c("#6bbd80", "#dc756c")) + 
  facet_wrap(~sample_code) +
  coord_cartesian(ylim = c(-40, 40)) +
  theme_bw(base_size = 14) +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(angle = 45, hjust = 1)
  )


ggsave(here("outputs/figures/gta_diffs_GTAMix1.pdf"), width = 6, height = 6, device = cairo_pdf)
```


```{r}
  gta_valid |> 
  filter(
    str_detect(sample_code, "Mix"), 
    !expected_seeds == 0,
    sample_code == "GTAMix11"
         ) |> 
  select(workstation, sample_code, obs_id, variety, ends_with("seeds")) |> 
  mutate(difference_seeds = expected_seeds - predicted_seeds) |> 
  ggplot(aes(classified_seeds, difference_seeds)) + 
  geom_hline(yintercept = 0, linetype = 2) +
  ylab(" ") +
  xlab("Classified seeds") +
  geom_point(aes(colour = variety), size = 5) +
  scale_colour_manual(values = c("#9a9c24", "#6bbd7f")) + 
  facet_wrap(~sample_code) +
  coord_cartesian(ylim = c(-40, 40)) +
  theme_bw(base_size = 14) +
  theme(
    legend.position = "bottom",
    axis.text.x = element_text(angle = 45, hjust = 1)
  )


ggsave(here("outputs/figures/gta_diffs_GTAMix11.pdf"), width = 6, height = 6, device = cairo_pdf)
```

```{r}
  gta_valid |> 
  filter(str_detect(sample_code, "Mix"), 
         !expected_seeds == 0) |> 
  select(workstation, sample_code, obs_id, variety, ends_with("seeds")) |> 
  mutate(difference_seeds = expected_seeds - predicted_seeds) |> 
  ggplot(aes(classified_seeds, difference_seeds)) + 
  geom_hline(yintercept = 0, linetype = 2) +
  ylab("Observed seeds - Expected seeds") +
  geom_point(aes(colour = variety), size = 2) +
  facet_wrap(~sample_code, scales = "free_x") + 
  xlab("Classified seeds") +
  theme_bw(base_size = 14) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

ggsave(here("outputs/figures/gta_diffs_all.pdf"), width = 8, height = 8, device = cairo_pdf)
```


