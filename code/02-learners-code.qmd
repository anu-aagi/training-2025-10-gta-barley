---
title: "Training session code: Significance testing"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

### Packages you need

```{r}
# R packages
library(here)
library(readxl)
library(janitor)
library(tidyverse)
library(patchwork)
```

```{r}
# Sequence of chi-square values
x <- seq(0, 25, length.out = 500)

# Degrees of freedom to compare
dfs <- c(1, 2, 4, 8, 12)

# Generate data
chi_data <- expand.grid(x = x, df = dfs) %>%
  mutate(density = dchisq(x, df))
```


```{r}
ggplot(chi_data, aes(x = x, y = density, colour = factor(df))) +
  geom_line(size = 1.1) +
  labs(
    title = expression(paste("Chi-square Probability Density Functions")),
    subtitle = "As degrees of freedom increase, the distribution shifts right and becomes more symmetric",
    x = expression(chi^2~"value"),
    y = "Density",
    colour = "df"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    legend.position = "top"
  )
```

```{r}
df_val <- 4
x_val <- 2

shade_data <- data.frame(x = seq(x_val, 20, length.out = 200))
shade_data$y <- dchisq(shade_data$x, df_val)

ggplot() +
  stat_function(fun = dchisq, args = list(df = df_val), colour = "steelblue", size = 1.2) +
  geom_area(data = shade_data, aes(x = x, y = y), fill = "tomato", alpha = 0.5) +
  labs(
    title = bquote("Chi-square(" * .(df_val) * ") distribution, shaded p-value for " ~ chi^2 == .(x_val)),
    x = expression(chi^2),
    y = "Density"
  ) +
  theme_minimal(base_size = 14)

```


```{r}
# Faceted plot
ggplot(chi_data, aes(x = x, y = density)) +
  geom_line(color = "steelblue", linewidth = 1.1) +
  facet_wrap(~ df, nrow = 2, scales = "free_y") +
  labs(
    title = expression("Chi-square Probability Density Functions for Different Degrees of Freedom"),
    subtitle = "As df increases, the distribution becomes more symmetric and shifts right",
    x = expression(chi^2~"value"),
    y = "Density"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    strip.text = element_text(size = 12, face = "bold"),
    panel.grid.minor = element_blank()
  )

```

```{r}
ggplot(chi_data, aes(x = x, y = density)) +
  geom_line(color = "steelblue", size = 1.1) +
  facet_wrap(~ df, nrow = 2, scales = "free_y") +
  labs(
    title = expression("Chi-square Probability Density Functions for Different Degrees of Freedom"),
    subtitle = "As df increases, the distribution becomes more symmetric and shifts right",
    x = expression(chi^2~"value"),
    y = "Density"
  ) +
  coord_cartesian(ylim = c(0, 0.8)) +   # ðŸ‘ˆ sets the y-axis view range
  theme_minimal(base_size = 14)
```

```{r}
k_df_plot_fn <- function(k){
  chi_data |>
    filter(df == k) |>
    ggplot(aes(x = x, y = density, colour = factor(df))) +
    geom_line(size = 1.1) +
    coord_cartesian(ylim = c(0, 0.5)) +
    labs(
      title = expression(paste("Chi-square Probability Density Function")),
      x = expression(chi^2~"value"),
      y = "Density",
      colour = "df"
    ) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold"),
      legend.position = "top"
    )
}

# Try it
k_df_plot_fn(k = 1)

```

```{r}
ggplot(chi_data, aes(x = x, y = density, colour = factor(df))) +
  geom_line(size = 1.1) +
  labs(
    title = expression(paste("Chi-square Probability Density Functions")),
    subtitle = "As degrees of freedom increase, the distribution shifts right and becomes more symmetric",
    x = expression(chi^2~"value"),
    y = "Density",
    colour = "df"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold"),
    legend.position = "top"
  )
```

```{r}
k_df_plot_fn <- function(k, x_val = NULL, y_max = 0.5) {
  
  # Filter for one df
  data_df <- chi_data |> filter(df == k)
  
  # Base plot
  p <- ggplot(data_df, aes(x = x, y = density)) +
    geom_line(colour = "steelblue", size = 1.2) +
    coord_cartesian(ylim = c(0, y_max)) +
    labs(
      title = bquote("Chi-square PDF for df = " ~ .(k)),
      x = expression(chi^2~"value"),
      y = "Density"
    ) +
    theme_minimal(base_size = 14) +
    theme(
      plot.title = element_text(face = "bold")
    )
  
  # Add shading if x_val is provided
  if (!is.null(x_val)) {
    shade_data <- data.frame(x = seq(x_val, max(data_df$x), length.out = 200))
    shade_data$y <- dchisq(shade_data$x, k)
    
    p <- p +
      geom_area(data = shade_data, aes(x = x, y = y),
                fill = "tomato", alpha = 0.5) +
      geom_vline(xintercept = x_val, linetype = "dashed", colour = "grey40") +
      annotate("text", x = x_val, y = y_max * 0.9, 
               label = paste0("x = ", x_val), 
               hjust = -0.1, colour = "grey40") +
      labs(subtitle = "Shaded area = P(X â‰¥ x)")
  }
  
  print(p)
}

k_df_plot_fn(2, 8.5)
```

